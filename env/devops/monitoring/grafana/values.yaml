# Diable all except grafana as other resources to managed by prometheus cluster addon
# Manage ONLY GRAFANA resources as part of this kustomize deployment
# and disable all other resources related to Prometheus and metrics
# as those other resources to be deployed in all clusters as part of cluster addon argocd applicationset
defaultRules:
  create: false

alertmanager:
  enabled: true

  ingress:
    enabled: true

    ingressClassName: nginx

    annotations: {}

    labels: {}

    hosts:
      - mk.alertmanager.local

    paths:
      - /

    pathType: ImplementationSpecific

    tls:
      - hosts:
          - mk.alertmanager.local
    # - secretName: alertmanager-general-tls
    #   hosts:
    #   - mk.alertmanager.local

nodeExporter:
  enabled: false

grafana:
  enabled: true

  ingress:
    enabled: true

    ingressClassName: nginx
    annotations: {}
    labels: {}

    hosts:
      - mk.grafana.local

    path: /

    tls:
      - hosts:
          - mk.grafana.local
    # - secretName: grafana-tls
    #   hosts:
    #   - mk.grafana.local

  grafana.ini:
    analytics:
      check_for_updates: false
      reporting_enabled: false
    feature_toggles:
      enable: tempoSearch tempoBackendSearch tempoServiceGraph
    security:
      cookie_secure: true
      cookie_samesite: strict
      strict_transport_security: true
      strict_transport_security_subdomains: true
    auth:
      disable_login_form: false
    log:
      mode: console
      level: warning
    grafana_net:
      url: https://grafana.com
    server:
      domain: mk.grafana.local
      root_url: "%(protocol)s://%(domain)s/"
      serve_from_sub_path: false

  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"

      ## Annotations for Grafana dashboard configmaps
      ##
      annotations: {}
      multicluster:
        global:
          enabled: true
        etcd:
          enabled: false
      provider:
        allowUiUpdates: true
    datasources:
      enabled: true
      defaultDatasourceEnabled: false

      ## URL of prometheus datasource
      ##
      # url: http://prometheus-stack-prometheus:9090/

      # If not defined, will use prometheus.prometheusSpec.scrapeInterval or its default
      # defaultDatasourceScrapeInterval: 15s

      ## Annotations for Grafana datasource configmaps
      ##
      annotations: {}

      ## Create datasource for each Pod of Prometheus StatefulSet;
      ## this uses headless service `prometheus-operated` which is
      ## created by Prometheus Operator
      ## ref: https://git.io/fjaBS
      createPrometheusReplicasDatasources: false
      label: grafana_datasource
      labelValue: "1"

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: true
          editable: false
          options:
            path: /var/lib/grafana/dashboards/default

  ## Configure grafana dashboard to import
  ## NOTE: To use dashboards, must also enable/configure dashboardProviders
  ## ref: https://grafana.com/dashboards
  ##
  ## dashboards per provider, use provider name as key.
  ##
  dashboards:
    # default is the dasboard provider name defined under dashboardProviders 
    default:
      kubernetes-calico:
        gnetId: 3244
        datasource: DevOps-Prometheus
      nginx-ingress-controller:
        gnetId: 9614
        datasource: DevOps-Prometheus
      prometheus-stats:
        gnetId: 2
        datasource: DevOps-Prometheus
      argoworkflow-metrics:
        gnetId: 13927
        datasource: DevOps-Prometheus
      argocd:
        gnetId: 14584
        datasource: DevOps-Prometheus
      cert-manager:
        gnetId: 11001
        datasource: DevOps-Prometheus
      keycloak-metrics:
        gnetId: 10441
        datasource: DevOps-Prometheus
      linkerd-multicluster:
        gnetId: 15488
        datasource: DevOps-Prometheus
      linkerd-authority:
        gnetId: 15482
        datasource: DevOps-Prometheus
      linkerd-cronjob:
        gnetId: 15483
        datasource: DevOps-Prometheus
      linkerd-daemonset:
        gnetId: 15484
        datasource: DevOps-Prometheus
      linkerd-deployment:
        gnetId: 15485
        datasource: DevOps-Prometheus

  serviceMonitor:
    labels:
      release: prometheus-operator

kubeApiServer:
  enabled: true

kubelet:
  enabled: false

kubeControllerManager:
  enabled: true

coreDns:
  enabled: false

kubeDns:
  enabled: false

kubeEtcd:
  enabled: false

kubeScheduler:
  enabled: false

kubeProxy:
  enabled: false

kubeStateMetrics:
  enabled: false

prometheusOperator:
  enabled: false

prometheus:
  enabled: false
