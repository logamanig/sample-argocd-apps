apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector-daemonset
spec:
  mode: daemonset
  image: otel/opentelemetry-collector-contrib:latest
  config: |
    receivers:
      jaeger:
        protocols:
          thrift_compact:
      otlp:
        protocols:
          grpc:
          http:
      
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otelcol'
              scrape_interval: 10s
              static_configs:
              - targets: ['0.0.0.0:8888']
              metric_relabel_configs:
                - source_labels: [ __name__ ]
                  regex: '.*grpc_io.*'
                  action: drop
    processors:
      batch:

    exporters:
      logging:
        loglevel: debug
      otlp:
        endpoint: mk.tempo.192.168.64.26.nip.io:443
        tls:
          insecure_skip_verify: true
      loki:
        endpoint: http://loki-loki-distributed-gateway.loki/loki/api/v1/push
        # tenant_id: "example"
        tls:
          insecure: true
        labels:
          resource:
            # Allowing 'container.name' attribute and transform it to 'container_name', which is a valid Loki label name.
            container.name: "container_name"
            # Allowing 'k8s.cluster.name' attribute and transform it to 'k8s_cluster_name', which is a valid Loki label name.
            k8s.cluster.name: "k8s_cluster_name"
          attributes:
            # Allowing 'severity' attribute and not providing a mapping, since the attribute name is a valid Loki label name.
            severity: ""
            http.status_code: "http_status_code" 
          # record:
          #   # Adds 'traceID' as a log label, seen as 'traceid' in Loki.
          #   traceID: "traceid"

    service:
      pipelines:
        traces:
          receivers: [otlp, jaeger]
          processors: [batch]
          exporters: [logging, otlp]
        metrics:
          receivers: [prometheus]
          processors: [batch]
          exporters: [logging]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [logging, loki]
