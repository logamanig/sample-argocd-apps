global:
  image:
    registry: docker.io

search:
  # -- Enable Tempo search
  enabled: true

rbac:
  create: true

# tempo:
#   securityContext:
#     capabilities:
#       drop:
#         - ALL
#     readOnlyRootFilesystem: true
#     runAsNonRoot: true
#     runAsUser: 1000

# ingester:
#   resources:
#     limits:
#       cpu: 0.5
#       memory: 0.75Gi
#     requests:
#       cpu: 0.5
#       memory: 0.75Gi

# distributor:
#   resources:
#     limits:
#       cpu: 0.25
#       memory: 0.25Gi
#     requests:
#       cpu: 0.25
#       memory: 0.25Gi

# compactor:
#   resources:
#     llimits:
#       cpu: 0.5
#       memory: 0.75Gi
#     requests:
#       cpu: 0.5
#       memory: 0.75Gi

# querier:
#   resources:
#     llimits:
#       cpu: 0.5
#       memory: 0.75Gi
#     requests:
#       cpu: 0.5
#       memory: 0.75Gi

# queryFrontend:
#   resources:
#     llimits:
#       cpu: 0.25
#       memory: 0.25Gi
#     requests:
#       cpu: 0.5
#       memory: 0.25Gi

# memcached:
#   resources:
#     limits:
#       cpu: 0.25
#       memory: 0.25Gi
#     requests:
#       cpu: 0.25
#       memory: 0.25Gi

gateway:
  enabled: true
  ingress:
    enabled: true # Grafana
    ingressClassName: nginx

    hosts:
      - host: mk.tempo.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      # - secretName: tempo-gateway-tls
      - hosts:
          - mk.tempo.192.168.64.35.nip.io
  # resources:
  #   limits:
  #     cpu: 0.25
  #     memory: 0.25Gi
  #   requests:
  #     cpu: 0.25
  #     memory: 0.25Gi

traces:
  jaeger:
    # -- Enable Tempo to ingest Jaeger GRPC traces
    grpc: false
    # -- Enable Tempo to ingest Jaeger Thrift Binary traces
    thriftBinary: false
    # -- Enable Tempo to ingest Jaeger Thrift Compact traces
    thriftCompact: false
    # -- Enable Tempo to ingest Jaeger Thrift HTTP traces
    thriftHttp: false
  # -- Enable Tempo to ingest Zipkin traces
  zipkin: false
  otlp:
    # -- Enable Tempo to ingest Open Telemetry HTTP traces
    http: true
    # -- Enable Tempo to ingest Open Telemetry GRPC traces
    grpc: true
  # -- Enable Tempo to ingest Open Census traces
  opencensus: false
  # -- Enable Tempo to ingest traces from Kafka. Reference: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/kafkareceiver
  kafka: {}

# ServiceMonitor configuration
serviceMonitor:
  # -- If enabled, ServiceMonitor resources for Prometheus Operator are created
  enabled: true
  # annotations: {}
  labels:
    prometheus: true
    # required for prometheus-operator
    # release: prometheus-operator

# Rules for the Prometheus Operator
prometheusRule:
  # -- If enabled, a PrometheusRule resource for Prometheus Operator is created
  enabled: true
  # -- Alternative namespace for the PrometheusRule resource
  namespace: null
  # -- PrometheusRule annotations
  annotations: {}
  # -- Additional PrometheusRule labels
  labels: {}
  # -- Contents of Prometheus rules file
  groups: # []
    - name: tempo-rules
      rules:
        - record: job:tempo_request_duration_seconds_bucket:sum_rate
          expr: sum(rate(tempo_request_duration_seconds_bucket[1m])) by (le, job)
        - record: job_route:tempo_request_duration_seconds_bucket:sum_rate
          expr: sum(rate(tempo_request_duration_seconds_bucket[1m])) by (le, job, route)
        - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
          expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)
